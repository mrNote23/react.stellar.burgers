{"version":3,"file":"static/js/856.64665b1b.chunk.js","mappings":"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","sources":["components/modal/modal-overlay/modal-overlay.tsx","webpack://react.stellar.burgers/./src/components/modal/modal.module.css?6368","components/modal/modal.tsx","hooks/use-modal.ts","webpack://react.stellar.burgers/./src/components/ingredient-details/ingredient-details.module.css?5386","components/ingredient-details/ingredient-details.tsx","pages/page-ingredient-details/page-ingredient-details.tsx"],"sourcesContent":["import { FC, ReactNode, MouseEvent } from \"react\"\n\ntype TModalOverlayProps = {\n  onClose: () => void\n  children?: ReactNode\n}\nconst ModalOverlay: FC<TModalOverlayProps> = ({ onClose, children }) => {\n  const closeModal = (e: MouseEvent<HTMLElement>) => {\n    if ((e.target as HTMLElement).className === \"modal-overlay\") {\n      onClose()\n    }\n  }\n\n  return (\n    <div className='modal-overlay' onClick={closeModal}>\n      {children}\n    </div>\n  )\n}\n\nexport default ModalOverlay\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal_modal__4TXNT\",\"header\":\"modal_header__ZrtET\",\"closeBtn\":\"modal_closeBtn__2fYw0\"};","import { FC, ReactNode, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport ModalOverlay from \"@components/modal/modal-overlay/modal-overlay\";\n\nimport styles from \"./modal.module.css\";\n\ntype TModalProps = {\n  children?: ReactNode;\n  onClose: () => void;\n  title?: string | ReactNode;\n};\n\nconst Modal: FC<TModalProps> = ({ children, onClose, title = \"\" }) => {\n  useEffect(() => {\n    const onKeyDown = (e: KeyboardEvent) => {\n      e.key === \"Escape\" && onClose();\n    };\n\n    document.addEventListener(\"keydown\", onKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <ModalOverlay onClose={() => onClose()}>\n      <div className={`${styles.modal} p-6`}>\n        <div className={styles.header}>\n          {typeof title === \"string\" ? (\n            <p className=\"text text_type_main-large pl-5\">{title}</p>\n          ) : (\n            title\n          )}\n          <button className={styles.closeBtn} onClick={() => onClose()}>\n            <CloseIcon type=\"primary\" />\n          </button>\n        </div>\n        {children}\n      </div>\n    </ModalOverlay>,\n    document.getElementById(\"modal-window\") as HTMLElement\n  );\n};\n\nexport default Modal;\n","import { useCallback, useState } from \"react\";\n\nexport const useModal = (status: boolean) => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(status);\n  const openModal = useCallback(() => {\n    setIsModalOpen(true);\n  }, []);\n\n  const closeModal = useCallback(() => {\n    setIsModalOpen(false);\n  }, []);\n\n  return { isModalOpen, openModal, closeModal };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"details\":\"ingredient-details_details__-9sOV\",\"detail\":\"ingredient-details_detail__V5Jwk\",\"detailImg\":\"ingredient-details_detailImg__sRuCH\"};","import { useAppSelector } from \"@store/store\";\nimport { TIngredient } from \"@config/types\";\nimport { Fragment } from \"react\";\nimport styles from \"./ingredient-details.module.css\";\n\nconst IngredientDetails = () => {\n  const ingredient: TIngredient | null = useAppSelector(\n    (store) => store.ingredientDetails\n  );\n\n  return (\n    <Fragment>\n      {ingredient && (\n        <div className=\"pl-25 pr-25 text-center\">\n          <img\n            src={ingredient[\"image_large\"]}\n            alt={ingredient[\"name\"]}\n            className={styles.detailImg}\n          />\n          <p className=\"text text_type_main-medium mt-4\">\n            {ingredient[\"name\"]}\n          </p>\n          <ul className={`${styles.details} mt-8 mb-15`}>\n            <li className={styles.detail}>\n              <p className=\"text text_type_main-default text_color_inactive\">\n                Калории, ккал\n              </p>\n              <p className=\"text text_type_digits-default text_color_inactive\">\n                {ingredient[\"calories\"]}\n              </p>\n            </li>\n            <li className={styles.detail}>\n              <p className=\"text text_type_main-default text_color_inactive\">\n                Белки, г\n              </p>\n              <p className=\"text text_type_digits-default text_color_inactive\">\n                {ingredient[\"proteins\"]}\n              </p>\n            </li>\n            <li className={styles.detail}>\n              <p className=\"text text_type_main-default text_color_inactive\">\n                Жиры, г\n              </p>\n              <p className=\"text text_type_digits-default text_color_inactive\">\n                {ingredient[\"fat\"]}\n              </p>\n            </li>\n            <li className={styles.detail}>\n              <p className=\"text text_type_main-default text_color_inactive\">\n                Углеводы, г\n              </p>\n              <p className=\"text text_type_digits-default text_color_inactive\">\n                {ingredient[\"carbohydrates\"]}\n              </p>\n            </li>\n          </ul>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default IngredientDetails;\n","import { useEffect } from \"react\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"@store/store\";\nimport { setIngredientDetails } from \"@store/reducers/ingredient-details-reducer\";\nimport { useModal } from \"@hooks/use-modal\";\nimport Modal from \"@components/modal/modal\";\nimport IngredientDetails from \"@components/ingredient-details/ingredient-details\";\nimport { PATH } from \"@config/constants\";\n\nconst PageIngredientDetails = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const params = useParams();\n  const ingredients = useAppSelector((store) => store.ingredients.ingredients);\n  const { isModalOpen, openModal, closeModal } = useModal(false);\n\n  useEffect(() => {\n    const ingredient = ingredients.filter((item) => item._id === params.id);\n    if (!ingredient.length) {\n      navigate(PATH.ERROR);\n    } else {\n      dispatch(setIngredientDetails(ingredient[0]));\n      openModal();\n    }\n  }, [ingredients, dispatch, params, navigate, openModal]);\n\n  if (!location.state) {\n    return (\n      <div className=\"d-flex direction-column items-center justify-center w-100\">\n        <p className=\"text text_type_main-large\">Детали ингредиента</p>\n        <IngredientDetails />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {isModalOpen ? (\n        <Modal\n          onClose={() => {\n            closeModal();\n            navigate(-1);\n          }}\n          title=\"Детали ингредиента\"\n        >\n          <IngredientDetails />\n        </Modal>\n      ) : null}\n    </>\n  );\n};\n\nexport default PageIngredientDetails;\n"],"names":["_ref","onClose","children","_jsx","className","onClick","e","target","_ref$title","title","useEffect","onKeyDown","key","document","addEventListener","removeEventListener","createPortal","ModalOverlay","_jsxs","concat","styles","CloseIcon","type","getElementById","useModal","status","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","openModal","useCallback","closeModal","ingredient","useAppSelector","store","ingredientDetails","Fragment","src","alt","location","useLocation","navigate","useNavigate","dispatch","useAppDispatch","params","useParams","ingredients","_useModal","filter","item","_id","id","length","setIngredientDetails","PATH","state","_Fragment","Modal","IngredientDetails"],"sourceRoot":""}