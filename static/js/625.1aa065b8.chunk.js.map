{"version":3,"file":"static/js/625.1aa065b8.chunk.js","mappings":"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","sources":["components/modal/modal-overlay/modal-overlay.tsx","webpack://react.stellar.burgers/./src/components/modal/modal.module.css?6368","components/modal/modal.tsx","hooks/use-modal.ts","webpack://react.stellar.burgers/./src/components/order-info/order-info-row/order-info-row.module.css?2773","components/order-info/order-info-row/order-info-row.tsx","webpack://react.stellar.burgers/./src/components/order-info/order-info.module.css?1a26","components/order-info/order-info.tsx","pages/page-order-info/page-order-info.tsx","utils/date-convert.ts"],"sourcesContent":["import { FC, ReactNode, MouseEvent } from \"react\"\n\ntype TModalOverlayProps = {\n  onClose: () => void\n  children?: ReactNode\n}\nconst ModalOverlay: FC<TModalOverlayProps> = ({ onClose, children }) => {\n  const closeModal = (e: MouseEvent<HTMLElement>) => {\n    if ((e.target as HTMLElement).className === \"modal-overlay\") {\n      onClose()\n    }\n  }\n\n  return (\n    <div className='modal-overlay' onClick={closeModal}>\n      {children}\n    </div>\n  )\n}\n\nexport default ModalOverlay\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal_modal__4TXNT\",\"header\":\"modal_header__ZrtET\",\"closeBtn\":\"modal_closeBtn__2fYw0\"};","import { FC, ReactNode, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport ModalOverlay from \"@components/modal/modal-overlay/modal-overlay\";\n\nimport styles from \"./modal.module.css\";\n\ntype TModalProps = {\n  children?: ReactNode;\n  onClose: () => void;\n  title?: string | ReactNode;\n};\n\nconst Modal: FC<TModalProps> = ({ children, onClose, title = \"\" }) => {\n  useEffect(() => {\n    const onKeyDown = (e: KeyboardEvent) => {\n      e.key === \"Escape\" && onClose();\n    };\n\n    document.addEventListener(\"keydown\", onKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <ModalOverlay onClose={() => onClose()}>\n      <div className={`${styles.modal} p-6`}>\n        <div className={styles.header}>\n          {typeof title === \"string\" ? (\n            <p className=\"text text_type_main-large pl-5\">{title}</p>\n          ) : (\n            title\n          )}\n          <button className={styles.closeBtn} onClick={() => onClose()}>\n            <CloseIcon type=\"primary\" />\n          </button>\n        </div>\n        {children}\n      </div>\n    </ModalOverlay>,\n    document.getElementById(\"modal-window\") as HTMLElement\n  );\n};\n\nexport default Modal;\n","import { useCallback, useState } from \"react\";\n\nexport const useModal = (status: boolean) => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(status);\n  const openModal = useCallback(() => {\n    setIsModalOpen(true);\n  }, []);\n\n  const closeModal = useCallback(() => {\n    setIsModalOpen(false);\n  }, []);\n\n  return { isModalOpen, openModal, closeModal };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"row\":\"order-info-row_row__bbNnA\",\"image_container\":\"order-info-row_image_container__V3jon\",\"image\":\"order-info-row_image__KN1s7\"};","import { FC } from \"react\";\nimport { TOriginalIngredient } from \"@config/types\";\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport styles from \"./order-info-row.module.css\";\n\nexport const OrderInfoRow: FC<{ data: TOriginalIngredient }> = ({ data }) => {\n  return (\n    <li className={styles.row}>\n      <div className=\"d-flex items-center\">\n        <div className={styles.image_container}>\n          <div className={styles.image}>\n            <img src={data.image_mobile} alt={data.name} />\n          </div>\n        </div>\n        <p className=\"text text_type_main-default ml-4\">{data.name}</p>\n      </div>\n      <p className=\"text text_type_main-medium d-flex items-center\">\n        <span className=\"mr-3\">\n          {data.qty} x {data.price}\n        </span>\n        <CurrencyIcon type=\"primary\" />\n      </p>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"order-info_container__HbJd2\",\"ingredients\":\"order-info_ingredients__Wobc4\",\"total\":\"order-info_total__yLCyc\",\"total_price\":\"order-info_total_price__yEtY0\"};","import { FC, Fragment, useEffect, useState } from \"react\";\nimport { TWsOrderPrepared, TWsOrdersList } from \"@config/types\";\nimport { ordersListPrepare } from \"@utils/orders-list-prepare\";\nimport { OrderStatus, OrderStatusTitle } from \"@config/constants\";\nimport { dateConvert } from \"@utils/date-convert\";\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { OrderInfoRow } from \"@components/order-info/order-info-row/order-info-row\";\nimport Api from \"@utils/api\";\nimport Loader from \"@components/loader/loader\";\nimport styles from \"./order-info.module.css\";\n\nexport const OrderInfo: FC<{ orderId: number | null }> = ({ orderId }) => {\n  const [order, setOrder] = useState<TWsOrderPrepared | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (orderId) {\n      setLoading(true);\n      Api.loadOrderInfo(+orderId)\n        .then((res) => {\n          setLoading(false);\n          const tmp = ordersListPrepare(res as TWsOrdersList);\n          if (tmp.success && tmp.orders.length) {\n            setOrder(tmp.orders[0]);\n          } else {\n            setError(\"Ошибка связи с базой...\");\n          }\n        })\n        .catch(() => {\n          setLoading(false);\n          setError(\"Ошибка связи с базой...\");\n        });\n    } else {\n      setError(\"Ошибка связи с базой...\");\n    }\n  }, [orderId]);\n\n  return (\n    <Fragment>\n      {loading && <Loader />}\n      {error && (\n        <div className={styles.container}>\n          <p className=\"text text_type_main-medium text_color_inactive m-10 text-center\">\n            {error}\n          </p>\n        </div>\n      )}\n      {order && !error && (\n        <div className={styles.container}>\n          <p className=\"text text_type_main-medium mt-10\">{order.name}</p>\n          <p\n            className={`text text_type_main-default mt-3 ${\n              order.status === OrderStatus.done && \"text_color_success\"\n            }`}\n          >\n            {OrderStatusTitle[order.status]}\n          </p>\n          <p className=\"text text_type_main-medium mt-15\">Состав:</p>\n          <ul className={styles.ingredients}>\n            {order.ingredients.map((item) => (\n              <OrderInfoRow key={item._id} data={item} />\n            ))}\n          </ul>\n          <div className={styles.total}>\n            <span className=\"text text_type_main-default text_color_inactive\">\n              {dateConvert(order.createdAt)}\n            </span>\n            <div className={styles.total_price}>\n              <p className=\"text text_type_digits-default text_color_primary mr-2\">\n                {order.totalPrice}\n              </p>\n              <CurrencyIcon type=\"primary\" />\n            </div>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n","import { useEffect } from \"react\";\nimport { OrderInfo } from \"@components/order-info/order-info\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { useModal } from \"@hooks/use-modal\";\nimport Modal from \"@components/modal/modal\";\n\nconst PageOrderInfo = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const { isModalOpen, openModal, closeModal } = useModal(false);\n\n  useEffect(() => {\n    openModal();\n  }, []);\n\n  if (!location.state) {\n    return (\n      <div\n        className=\"d-flex direction-column items-center justify-center\"\n        style={{ width: \"640px\", margin: \"0 auto\" }}\n      >\n        <p className=\"text text_type_digits-default\">#{params.id}</p>\n        <OrderInfo orderId={params.id ? +params.id : null} />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {isModalOpen ? (\n        <Modal\n          onClose={() => {\n            closeModal();\n            navigate(-1);\n          }}\n          title={<p className=\"text text_type_digits-default\">#{params.id}</p>}\n        >\n          <OrderInfo orderId={params.id ? +params.id : null} />\n        </Modal>\n      ) : null}\n    </>\n  );\n};\n\nexport default PageOrderInfo;\n","export const dateConvert = (date: string) => {\n  const todayDate = new Date();\n  const targetDate = new Date(date);\n\n  const daysPassed = Math.round((+todayDate - +targetDate) / 86400000);\n  let resultDate: string;\n\n  switch (daysPassed) {\n    case 0:\n      resultDate = \"Сегодня\";\n      break;\n    case 1:\n      resultDate = \"Вчера\";\n      break;\n    case 2:\n      resultDate = \"Позавчера\";\n      break;\n    case 3:\n      resultDate = \"3 дня назад\";\n      break;\n    default:\n      resultDate = `${(\"0\" + targetDate.getDate()).slice(-2)}.${(\n        \"0\" + (+targetDate.getMonth() + 1).toString()\n      ).slice(-2)}.${targetDate.getFullYear()}`;\n  }\n\n  const resultTime = `${(\"0\" + targetDate.getHours()).slice(-2)}:${(\n    \"0\" + targetDate.getMinutes()\n  ).slice(-2)}`;\n  return `${resultDate}, ${resultTime}`;\n};\n"],"names":["_ref","onClose","children","_jsx","className","onClick","e","target","_ref$title","title","useEffect","onKeyDown","key","document","addEventListener","removeEventListener","createPortal","ModalOverlay","_jsxs","concat","styles","CloseIcon","type","getElementById","useModal","status","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","openModal","useCallback","closeModal","OrderInfoRow","data","src","image_mobile","alt","name","qty","price","CurrencyIcon","OrderInfo","orderId","order","setOrder","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","Api","then","res","tmp","ordersListPrepare","success","orders","length","catch","Fragment","Loader","OrderStatus","OrderStatusTitle","ingredients","map","item","_id","dateConvert","createdAt","totalPrice","location","useLocation","navigate","useNavigate","params","useParams","_useModal","state","_Fragment","Modal","id","style","width","margin","date","resultDate","todayDate","Date","targetDate","Math","round","getDate","slice","getMonth","toString","getFullYear","resultTime","getHours","getMinutes"],"sourceRoot":""}