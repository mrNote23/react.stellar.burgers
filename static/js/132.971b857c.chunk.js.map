{"version":3,"file":"static/js/132.971b857c.chunk.js","mappings":"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","sources":["webpack://react.stellar.burgers/./src/components/feed-order-item/feed-order-images/feed-order-images.module.css?a6d1","components/feed-order-item/feed-order-images/feed-order-images.tsx","webpack://react.stellar.burgers/./src/components/feed-order-item/feed-order-item.module.css?5267","components/feed-order-item/feed-order-item.tsx","pages/page-feed/feed-list/feed-list.tsx","utils/number-with-spaces.ts","webpack://react.stellar.burgers/./src/pages/page-feed/feed-info/feed-info.module.css?052c","pages/page-feed/feed-info/feed-info.tsx","webpack://react.stellar.burgers/./src/pages/page-feed/page-feed.module.css?9775","pages/page-feed/page-feed.tsx","utils/date-convert.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"feed-order-images_container__uPktB\",\"item\":\"feed-order-images_item__IVYlW\",\"image\":\"feed-order-images_image__FN1xE\",\"more\":\"feed-order-images_more__BCfBW\"};","import { TOriginalIngredient } from \"@config/types\";\nimport { FC, useMemo } from \"react\";\nimport styles from \"./feed-order-images.module.css\";\n\nexport const FeedOrderImages: FC<{ ingredients: TOriginalIngredient[] }> = ({\n  ingredients,\n}) => {\n  const showMore = useMemo(() => ingredients.length - 6, [ingredients]);\n\n  return (\n    <div className={styles.container}>\n      {ingredients.slice(0, 6).map((item, index) => (\n        <div\n          key={item._id}\n          className={styles.item}\n          style={{ zIndex: 6 - index }}\n        >\n          <div className={styles.image}>\n            <img\n              key={item._id}\n              src={item.image_mobile}\n              alt={item.name}\n              style={{\n                opacity: index === 5 && showMore > 0 ? \"0.3\" : \"1\",\n              }}\n            />\n            {index === 5 && showMore > 0 && (\n              <span className={`text text_type_main-default ${styles.more}`}>\n                +{showMore}\n              </span>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"order_item\":\"feed-order-item_order_item__OZ7Ko\",\"header\":\"feed-order-item_header__cRoyr\",\"footer\":\"feed-order-item_footer__4DJmd\",\"total_price\":\"feed-order-item_total_price__a5MDC\"};","import { FC } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { TWsOrderPrepared } from \"@config/types\";\nimport { OrderStatus, OrderStatusTitle } from \"@config/constants\";\nimport { dateConvert } from \"@utils/date-convert\";\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { FeedOrderImages } from \"@components/feed-order-item/feed-order-images/feed-order-images\";\nimport styles from \"./feed-order-item.module.css\";\n\nexport const FeedOrderItem: FC<{\n  order: TWsOrderPrepared;\n  target: string;\n  showStatus?: boolean;\n}> = ({ order, target, showStatus = true }) => {\n  const location = useLocation();\n\n  return (\n    <Link\n      to={`${target}/${order.number}`}\n      className={styles.order_item}\n      state={{ prevLocation: location }}\n    >\n      <div className={styles.header}>\n        <p className=\"text text_type_digits-default text_color_primary\">\n          #{order.number}\n        </p>\n        <p className=\"text text_type_main-default text_color_inactive\">\n          {dateConvert(order.createdAt)}\n        </p>\n      </div>\n      <p className=\"text text_type_main-medium text_color_primary pb-2\">\n        {order.name}\n      </p>\n      {showStatus && (\n        <p\n          className={`text text_type_main-default ${\n            order.status === OrderStatus.done\n              ? \"text_color_success\"\n              : \"text_color_primary\"\n          } pb-6`}\n        >\n          {OrderStatusTitle[order.status]}\n        </p>\n      )}\n      <div className={styles.footer}>\n        <FeedOrderImages ingredients={order.ingredients} />\n        <div className={styles.total_price}>\n          <p className=\"text text_type_digits-default text_color_primary mr-2\">\n            {order.totalPrice}\n          </p>\n          <CurrencyIcon type=\"primary\" />\n        </div>\n      </div>\n    </Link>\n  );\n};\n","import { FC, Fragment } from \"react\";\nimport { TWsOrderPrepared } from \"@config/types\";\nimport { FeedOrderItem } from \"@components/feed-order-item/feed-order-item\";\nimport { PATH } from \"@config/constants\";\nimport Loader from \"@components/loader/loader\";\n\nexport const FeedList: FC<{ orders: TWsOrderPrepared[] }> = ({ orders }) => {\n  return (\n    <Fragment>\n      {!orders || !orders.length ? (\n        <Loader />\n      ) : (\n        orders.map((order) => (\n          <FeedOrderItem\n            key={order._id}\n            order={order}\n            showStatus={false}\n            target={PATH.FEED}\n          />\n        ))\n      )}\n    </Fragment>\n  );\n};\n","export const numberWithSpaces = (value: number): string => {\n  return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"feed_info\":\"feed-info_feed_info__NCvAO\",\"orders\":\"feed-info_orders__ByvmB\"};","import { FC, Fragment } from \"react\";\nimport { TWsOrdersListPrepared } from \"@config/types\";\nimport { OrderStatus } from \"@config/constants\";\nimport { numberWithSpaces } from \"@utils/number-with-spaces\";\nimport Loader from \"@components/loader/loader\";\nimport styles from \"./feed-info.module.css\";\n\nexport const FeedInfo: FC<{ feed: TWsOrdersListPrepared }> = ({ feed }) => {\n  const OrdersList: FC<{ type: OrderStatus[] }> = ({ type }) => {\n    const orders = feed.orders\n      .filter((order) => type.includes(order.status))\n      .slice(0, 10);\n\n    return (\n      <ul\n        className={`text text_type_digits-default ${\n          type.includes(OrderStatus.done) && \"text_color_success\"\n        }`}\n      >\n        {orders.map((order) => (\n          <li key={order._id}>{order.number}</li>\n        ))}\n      </ul>\n    );\n  };\n  return (\n    <Fragment>\n      {!feed || !feed.orders.length ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <div className={styles.orders}>\n            <div className=\"w-100 mr-4\">\n              <p className=\"text text_type_main-medium pb-6\">Готовы:</p>\n              <OrdersList type={[OrderStatus.done]} />\n            </div>\n            <div className=\"w-100 ml-4\">\n              <p className=\"text text_type_main-medium pb-6\">В работе:</p>\n              <OrdersList type={[OrderStatus.created, OrderStatus.pending]} />\n            </div>\n          </div>\n          <div className={styles.feed_info}>\n            <p className=\"text text_type_main-medium pt-15\">\n              Выполнено за все время:\n            </p>\n            <p className=\"text text_type_digits-large\">\n              <span>{numberWithSpaces(feed.total)}</span>\n            </p>\n            <p className=\"text text_type_main-medium pt-15\">\n              Выполнено за сегодня:\n            </p>\n            <p className=\"text text_type_digits-large\">\n              <span>{numberWithSpaces(feed.totalToday)}</span>\n            </p>\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"page-feed_container__qjNgZ\",\"blocks\":\"page-feed_blocks__gJkqh\",\"left\":\"page-feed_left__Ax3BB\",\"right\":\"page-feed_right__fiSL2\"};","import { Fragment, useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"@store/store\";\nimport { closeAllData, loadAllData } from \"@store/reducers/feed-reducer\";\nimport { FeedList } from \"@pages/page-feed/feed-list/feed-list\";\nimport { FeedInfo } from \"@pages/page-feed/feed-info/feed-info\";\nimport Error from \"@components/error/error\";\nimport styles from \"./page-feed.module.css\";\n\nconst PageFeed = () => {\n  const dispatch = useAppDispatch();\n  const feed = useAppSelector((store) => store.feed);\n\n  useEffect(() => {\n    if (!feed.connected) {\n      dispatch(loadAllData());\n    }\n    return () => {\n      dispatch(closeAllData());\n    };\n  }, [dispatch]);\n\n  if (feed.message) {\n    return <Error />;\n  }\n  return (\n    <Fragment>\n      <div className={styles.container}>\n        <p className=\"text text_type_main-large w-100\">Лента заказов</p>\n        <div className={styles.blocks}>\n          <section className={styles.left}>\n            <FeedList orders={feed.orders} />\n          </section>\n          <section className={styles.right}>\n            <FeedInfo feed={feed} />\n          </section>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default PageFeed;\n","export const dateConvert = (date: string) => {\n  const todayDate = new Date();\n  const targetDate = new Date(date);\n\n  const daysPassed = Math.round((+todayDate - +targetDate) / 86400000);\n  let resultDate: string;\n\n  switch (daysPassed) {\n    case 0:\n      resultDate = \"Сегодня\";\n      break;\n    case 1:\n      resultDate = \"Вчера\";\n      break;\n    case 2:\n      resultDate = \"Позавчера\";\n      break;\n    case 3:\n      resultDate = \"3 дня назад\";\n      break;\n    default:\n      resultDate = `${(\"0\" + targetDate.getDate()).slice(-2)}.${(\n        \"0\" + (+targetDate.getMonth() + 1).toString()\n      ).slice(-2)}.${targetDate.getFullYear()}`;\n  }\n\n  const resultTime = `${(\"0\" + targetDate.getHours()).slice(-2)}:${(\n    \"0\" + targetDate.getMinutes()\n  ).slice(-2)}`;\n  return `${resultDate}, ${resultTime}`;\n};\n"],"names":["FeedOrderImages","_ref","ingredients","showMore","useMemo","length","_jsx","className","styles","children","slice","map","item","index","style","zIndex","_jsxs","src","image_mobile","alt","name","opacity","_id","concat","FeedOrderItem","order","target","_ref$showStatus","showStatus","location","useLocation","Link","to","number","state","prevLocation","dateConvert","createdAt","status","OrderStatus","OrderStatusTitle","totalPrice","CurrencyIcon","type","FeedList","orders","Fragment","PATH","Loader","numberWithSpaces","value","toString","replace","FeedInfo","feed","OrdersList","_ref2","filter","includes","total","totalToday","dispatch","useAppDispatch","useAppSelector","store","useEffect","connected","loadAllData","closeAllData","message","Error","date","resultDate","todayDate","Date","targetDate","Math","round","getDate","getMonth","getFullYear","resultTime","getHours","getMinutes"],"sourceRoot":""}