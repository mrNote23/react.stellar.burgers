{"version":3,"file":"static/js/471.9abc1261.chunk.js","mappings":"+MAEaA,EAAU,SAAIC,GACzB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAYF,GAAcG,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAgCL,EAAAA,EAAAA,WAAkB,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjDE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,IAE5BG,EAAAA,EAAAA,YAAU,WACRD,EAAYE,KAAKC,UAAUR,KAAUO,KAAKC,UAAUb,GACtD,GAAG,CAACK,EAAML,IAWV,MAAO,CAAEK,KAAAA,EAAMC,QAAAA,EAASQ,SATP,SAACC,GAChB,IAAAC,EAAwBD,EAAEE,OAAlBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACdb,GAAQ,SAACc,GAAI,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWD,GAAI,IAAAE,EAAAA,EAAAA,GAAA,GAAGJ,EAAOC,GAAK,GAC7C,EAMkCI,UAJhB,WAChBjB,EAAQN,EACV,EAE6CS,SAAAA,EAC/C,C,+ICkEA,UArE2B,WACzB,IAAQe,GAAeC,EAAAA,EAAAA,KAAe,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAAnDH,WACRI,GAA2B7B,EAAAA,EAAAA,GAAQ,CAAE8B,MAAO,KAApCxB,EAAIuB,EAAJvB,KAAMS,EAAQc,EAARd,SACdb,GAA0BC,EAAAA,EAAAA,UAAiB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvC6B,EAAK3B,EAAA,GAAE4B,EAAQ5B,EAAA,GACtBI,GAA8BL,EAAAA,EAAAA,WAAkB,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CyB,EAAOxB,EAAA,GAAEyB,EAAUzB,EAAA,GACpB0B,GAAWC,EAAAA,EAAAA,MAqBjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAAAC,SACNd,GACCY,EAAAA,EAAAA,KAACG,EAAAA,GAAQ,CAACC,GAAIC,EAAAA,GAAAA,QAEdC,EAAAA,EAAAA,MAAA,QACEC,UAAU,4DACVC,SA1BS,SAAC7B,GAChBA,EAAE8B,iBACFZ,GAAW,GACXa,EAAAA,EAAAA,kBAAsBzC,EAAKwB,OACxBkB,MAAK,WACJd,GAAW,IACXe,EAAAA,EAAAA,IACEC,EAAAA,IACA,EACAC,EAAAA,IAEFhB,EAASO,EAAAA,GAAAA,eAAqB,CAAEU,SAAS,GAC3C,IACCC,OAAM,SAACC,GACNpB,GAAW,GACXF,EAASsB,EACX,GACJ,EAS2Bf,SAAA,EAEnBF,EAAAA,EAAAA,KAAA,KAAGO,UAAU,iCAAgCL,SAAC,8HAG7CR,IACCM,EAAAA,EAAAA,KAAA,KAAGO,UAAU,mDAAkDL,SAC5DR,KAGLM,EAAAA,EAAAA,KAACkB,EAAAA,GAAU,CACTC,WAAW,MACXrC,KAAK,QACLC,MAAOd,EAAKwB,MACZf,SAAUA,EACV0C,WAAS,KAEXpB,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACLC,SAAS,SACTC,KAAK,UACLC,KAAK,SACLC,SAAU7B,EAAQM,SACnB,8EAIDI,EAAAA,EAAAA,MAAA,KAAGC,UAAU,wDAAuDL,SAAA,CAAC,oGAEnEF,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACtB,GAAIC,EAAAA,GAAAA,MAAWH,SAAC,0CAMlC,C","sources":["hooks/use-form.ts","pages/auth-pages/page-forgot-password/page-forgot-password.tsx"],"sourcesContent":["import { ChangeEvent, useEffect, useState } from \"react\";\n\nexport const useForm = <T>(initialFields: T) => {\n  const [form, setForm] = useState<T>(initialFields);\n  const [modified, setModified] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModified(JSON.stringify(form) !== JSON.stringify(initialFields));\n  }, [form, initialFields]);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const resetForm = () => {\n    setForm(initialFields);\n  };\n\n  return { form, setForm, onChange, resetForm, modified };\n};\n","import { FormEvent, Fragment, useState } from \"react\";\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\n\nimport { useForm } from \"@hooks/use-form\";\nimport {\n  Button,\n  EmailInput,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport Api from \"@utils/api\";\nimport { useAppSelector } from \"@store/store\";\nimport { setCookie } from \"@utils/cookie\";\nimport {\n  PATH,\n  RESET_PASSWORD_COOKIE_NAME,\n  RESET_PASSWORD_COOKIE_OPTIONS,\n} from \"@config/constants\";\n\nconst PageForgotPassword = () => {\n  const { authorized } = useAppSelector((store) => store.user);\n  const { form, onChange } = useForm({ email: \"\" });\n  const [error, setError] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  const onSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    Api.userResetPassword(form.email)\n      .then(() => {\n        setLoading(false);\n        setCookie(\n          RESET_PASSWORD_COOKIE_NAME,\n          true,\n          RESET_PASSWORD_COOKIE_OPTIONS\n        );\n        navigate(PATH.RESET_PASSWORD, { replace: true });\n      })\n      .catch((err) => {\n        setLoading(false);\n        setError(err);\n      });\n  };\n\n  return (\n    <Fragment>\n      {authorized ? (\n        <Navigate to={PATH.HOME} />\n      ) : (\n        <form\n          className=\"d-flex items-center justify-center direction-column w-100\"\n          onSubmit={onSubmit}\n        >\n          <p className=\"text text_type_main-medium m-5\">\n            Восстановление пароля\n          </p>\n          {error && (\n            <p className=\"text text_type_main-default text_color_error m-3\">\n              {error}\n            </p>\n          )}\n          <EmailInput\n            extraClass=\"m-5\"\n            name=\"email\"\n            value={form.email}\n            onChange={onChange}\n            autoFocus\n          />\n          <Button\n            htmlType=\"submit\"\n            type=\"primary\"\n            size=\"medium\"\n            disabled={loading}\n          >\n            Восстановить\n          </Button>\n\n          <p className=\"text text_type_main-default text_color_inactive mt-15\">\n            Вспомнили пароль?&nbsp;\n            <Link to={PATH.LOGIN}>Войти</Link>\n          </p>\n        </form>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PageForgotPassword;\n"],"names":["useForm","initialFields","_useState","useState","_useState2","_slicedToArray","form","setForm","_useState3","_useState4","modified","setModified","useEffect","JSON","stringify","onChange","e","_e$target","target","name","value","prev","_objectSpread","_defineProperty","resetForm","authorized","useAppSelector","store","user","_useForm","email","error","setError","loading","setLoading","navigate","useNavigate","_jsx","Fragment","children","Navigate","to","PATH","_jsxs","className","onSubmit","preventDefault","Api","then","setCookie","RESET_PASSWORD_COOKIE_NAME","RESET_PASSWORD_COOKIE_OPTIONS","replace","catch","err","EmailInput","extraClass","autoFocus","Button","htmlType","type","size","disabled","Link"],"sourceRoot":""}